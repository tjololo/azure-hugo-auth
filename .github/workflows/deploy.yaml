name: Publish site
on:
  push:
    branches: main

jobs:
  check:
    name: Check for function changes
    runs-on: ubuntu-latest
    outputs:
      func_change: ${{ steps.check_files.outputs.func_change }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: check for modified function files
        id: check_files
        run: |
          echo "======== list modified files ========"
          git diff --name-only HEAD^ HEAD
          echo "======== check paths of modified files ========"
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file == function/* ]] || [[ $file == terraform/* ]] ; then
              echo "This modified file is under the 'function' or terraform folder."
              echo "::set-output name=func_change::true"
              break
            else
              echo "::set-output name=func_change::false"
            fi
          done < files.txt
  terraform:
    name: Run terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    env:
      ARM_CLIENT_ID: ${{secrets.TF_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_TENANT_ID}}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: |
          terraform plan \
          -var resourcegroup=${{secrets.RESOURCEGROUP}} \
          -var storageaccountname=${{secrets.STORAGEACCOUNTNAME}} \
          -var proxyname=${{secrets.PROXYNAME}} \
          -var google_client_id=${{secrets.GOOGLE_ID}} \
          -var google_client_secret=${{secrets.GOOGLE_SECRET}} \
          -var allowed_users=${{secrets.ALLOWED_USERS}}
      - name: Terraform apply
        run: |
          terraform apply -auto-approve \
          -var resourcegroup=${{secrets.RESOURCEGROUP}} \
          -var storageaccountname=${{secrets.STORAGEACCOUNTNAME}} \
          -var proxyname=${{secrets.PROXYNAME}} \
          -var google_client_id=${{secrets.GOOGLE_ID}} \
          -var google_client_secret=${{secrets.GOOGLE_SECRET}} \
          -var allowed_users=${{secrets.ALLOWED_USERS}}
  function:
    name: Publish function
    runs-on: ubuntu-latest
    needs: [terraform,check]
    if: needs.check.outputs.func_change == 'true'
    env:
      AZURE_FUNCTIONAPP_PACKAGE_PATH: ./function/AuthProxy
      AZURE_FUNCTIONAPP_NAME: ${{secrets.PROXYNAME}}
      DOTNET_VERSION: 3.1.x
    steps:
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Run dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
  hugo:
    name: Publish hugosite
    runs-on: ubuntu-latest
    env:
      HUGOVERSION: 0.80.0
      HUGO_BASEURL: "https://${{secrets.PROXYNAME}}.azurewebsites.net/docs/"
    steps:
      - name: Install hugo
        run: |
          echo -e "\nDownloading Hugo version ${{env.HUGOVERSION}}."
          wget "https://github.com/gohugoio/hugo/releases/download/v$(echo "${{env.HUGOVERSION}}" | grep -o  "[0-9]\+.[0-9]\+.[0-9]\+")/hugo_${{env.HUGOVERSION}}_Linux-64bit.tar.gz"
          tar xzvf hugo_${{env.HUGOVERSION}}_Linux-64bit.tar.gz
          mv hugo /tmp
          rm hugo*
      - uses: actions/checkout@v2
      - name: Build hugo site
        working-directory: ./hugo/quickstart
        run: | 
          /tmp/hugo --gc --minify --cleanDestinationDir -d "public"
      - uses: bacongobbler/azure-blob-storage-upload@v1.1.1
        with:
          source_dir: 'hugo/quickstart/public'
          container_name: 'content'
          connection_string: ${{ secrets.STORAGE_CREDENTIALS }}
          sync: true
